<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.jinkun.rds.sys.dao.GwQualityInspectTaskResultMapper">
  <resultMap id="BaseResultMap" type="me.jinkun.rds.sys.domain.GwQualityInspectTaskResult">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="qitd_id" jdbcType="BIGINT" property="qitdId" />
    <result column="check_content" jdbcType="VARCHAR" property="checkContent" />
    <result column="is_qualified" jdbcType="BIT" property="isQualified" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="check_situation" jdbcType="VARCHAR" property="checkSituation" />
    <result column="enclosure" jdbcType="VARCHAR" property="enclosure" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, qitd_id, check_content, is_qualified, score, check_time, check_situation, enclosure, 
    remark
  </sql>
  <select id="selectByExample" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTaskResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gw_quality_inspect_task_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gw_quality_inspect_task_result
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gw_quality_inspect_task_result
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTaskResultExample">
    delete from gw_quality_inspect_task_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTaskResult">
    insert into gw_quality_inspect_task_result (id, qitd_id, check_content, 
      is_qualified, score, check_time, 
      check_situation, enclosure, remark
      )
    values (#{id,jdbcType=BIGINT}, #{qitdId,jdbcType=BIGINT}, #{checkContent,jdbcType=VARCHAR}, 
      #{isQualified,jdbcType=BIT}, #{score,jdbcType=INTEGER}, #{checkTime,jdbcType=TIMESTAMP}, 
      #{checkSituation,jdbcType=VARCHAR}, #{enclosure,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTaskResult">
    insert into gw_quality_inspect_task_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="qitdId != null">
        qitd_id,
      </if>
      <if test="checkContent != null">
        check_content,
      </if>
      <if test="isQualified != null">
        is_qualified,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="checkSituation != null">
        check_situation,
      </if>
      <if test="enclosure != null">
        enclosure,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="qitdId != null">
        #{qitdId,jdbcType=BIGINT},
      </if>
      <if test="checkContent != null">
        #{checkContent,jdbcType=VARCHAR},
      </if>
      <if test="isQualified != null">
        #{isQualified,jdbcType=BIT},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkSituation != null">
        #{checkSituation,jdbcType=VARCHAR},
      </if>
      <if test="enclosure != null">
        #{enclosure,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTaskResultExample" resultType="java.lang.Long">
    select count(*) from gw_quality_inspect_task_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update gw_quality_inspect_task_result
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.qitdId != null">
        qitd_id = #{record.qitdId,jdbcType=BIGINT},
      </if>
      <if test="record.checkContent != null">
        check_content = #{record.checkContent,jdbcType=VARCHAR},
      </if>
      <if test="record.isQualified != null">
        is_qualified = #{record.isQualified,jdbcType=BIT},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkSituation != null">
        check_situation = #{record.checkSituation,jdbcType=VARCHAR},
      </if>
      <if test="record.enclosure != null">
        enclosure = #{record.enclosure,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gw_quality_inspect_task_result
    set id = #{record.id,jdbcType=BIGINT},
      qitd_id = #{record.qitdId,jdbcType=BIGINT},
      check_content = #{record.checkContent,jdbcType=VARCHAR},
      is_qualified = #{record.isQualified,jdbcType=BIT},
      score = #{record.score,jdbcType=INTEGER},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      check_situation = #{record.checkSituation,jdbcType=VARCHAR},
      enclosure = #{record.enclosure,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTaskResult">
    update gw_quality_inspect_task_result
    <set>
      <if test="qitdId != null">
        qitd_id = #{qitdId,jdbcType=BIGINT},
      </if>
      <if test="checkContent != null">
        check_content = #{checkContent,jdbcType=VARCHAR},
      </if>
      <if test="isQualified != null">
        is_qualified = #{isQualified,jdbcType=BIT},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkSituation != null">
        check_situation = #{checkSituation,jdbcType=VARCHAR},
      </if>
      <if test="enclosure != null">
        enclosure = #{enclosure,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTaskResult">
    update gw_quality_inspect_task_result
    set qitd_id = #{qitdId,jdbcType=BIGINT},
      check_content = #{checkContent,jdbcType=VARCHAR},
      is_qualified = #{isQualified,jdbcType=BIT},
      score = #{score,jdbcType=INTEGER},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      check_situation = #{checkSituation,jdbcType=VARCHAR},
      enclosure = #{enclosure,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>