<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.jinkun.rds.sys.dao.GwQualityInspectTaskMapper">
    <resultMap id="BaseResultMap" type="me.jinkun.rds.sys.domain.GwQualityInspectTask">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="s_id" jdbcType="BIGINT" property="sId"/>
        <result column="ct_id" jdbcType="BIGINT" property="ctId"/>
        <result column="c_id" jdbcType="BIGINT" property="cId"/>
        <result column="u_id" jdbcType="BIGINT" property="uId"/>
        <result column="inspector_id" jdbcType="BIGINT" property="inspectorId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="year" jdbcType="BIGINT" property="year"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, s_id, ct_id, c_id, u_id, inspector_id, name, year, start_time, end_time, sort, 
    remark, create_time
  </sql>
    <select id="selectByExample" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTaskExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from gw_quality_inspect_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from gw_quality_inspect_task
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gw_quality_inspect_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTaskExample">
        delete from gw_quality_inspect_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTask">
    insert into gw_quality_inspect_task (id, s_id, ct_id, c_id, 
      u_id, inspector_id, name, 
      year, start_time, end_time, 
      sort, remark, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{sId,jdbcType=BIGINT}, #{ctId,jdbcType=BIGINT}, #{cId,jdbcType=BIGINT}, 
      #{uId,jdbcType=BIGINT}, #{inspectorId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{year,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{sort,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTask">
        insert into gw_quality_inspect_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="sId != null">
                s_id,
            </if>
            <if test="ctId != null">
                ct_id,
            </if>
            <if test="cId != null">
                c_id,
            </if>
            <if test="uId != null">
                u_id,
            </if>
            <if test="inspectorId != null">
                inspector_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="year != null">
                year,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="sId != null">
                #{sId,jdbcType=BIGINT},
            </if>
            <if test="ctId != null">
                #{ctId,jdbcType=BIGINT},
            </if>
            <if test="cId != null">
                #{cId,jdbcType=BIGINT},
            </if>
            <if test="uId != null">
                #{uId,jdbcType=BIGINT},
            </if>
            <if test="inspectorId != null">
                #{inspectorId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="year != null">
                #{year,jdbcType=BIGINT},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTaskExample"
            resultType="java.lang.Long">
        select count(*) from gw_quality_inspect_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update gw_quality_inspect_task
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.sId != null">
                s_id = #{record.sId,jdbcType=BIGINT},
            </if>
            <if test="record.ctId != null">
                ct_id = #{record.ctId,jdbcType=BIGINT},
            </if>
            <if test="record.cId != null">
                c_id = #{record.cId,jdbcType=BIGINT},
            </if>
            <if test="record.uId != null">
                u_id = #{record.uId,jdbcType=BIGINT},
            </if>
            <if test="record.inspectorId != null">
                inspector_id = #{record.inspectorId,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.year != null">
                year = #{record.year,jdbcType=BIGINT},
            </if>
            <if test="record.startTime != null">
                start_time = #{record.startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update gw_quality_inspect_task
        set id = #{record.id,jdbcType=BIGINT},
        s_id = #{record.sId,jdbcType=BIGINT},
        ct_id = #{record.ctId,jdbcType=BIGINT},
        c_id = #{record.cId,jdbcType=BIGINT},
        u_id = #{record.uId,jdbcType=BIGINT},
        inspector_id = #{record.inspectorId,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        year = #{record.year,jdbcType=BIGINT},
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
        sort = #{record.sort,jdbcType=INTEGER},
        remark = #{record.remark,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTask">
        update gw_quality_inspect_task
        <set>
            <if test="sId != null">
                s_id = #{sId,jdbcType=BIGINT},
            </if>
            <if test="ctId != null">
                ct_id = #{ctId,jdbcType=BIGINT},
            </if>
            <if test="cId != null">
                c_id = #{cId,jdbcType=BIGINT},
            </if>
            <if test="uId != null">
                u_id = #{uId,jdbcType=BIGINT},
            </if>
            <if test="inspectorId != null">
                inspector_id = #{inspectorId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="year != null">
                year = #{year,jdbcType=BIGINT},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="me.jinkun.rds.sys.domain.GwQualityInspectTask">
    update gw_quality_inspect_task
    set s_id = #{sId,jdbcType=BIGINT},
      ct_id = #{ctId,jdbcType=BIGINT},
      c_id = #{cId,jdbcType=BIGINT},
      u_id = #{uId,jdbcType=BIGINT},
      inspector_id = #{inspectorId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      year = #{year,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      sort = #{sort,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!--lc个人添加-->

    <sql id="Base_Column_List2">
    qit.id, qit.s_id, qit.ct_id, qit.c_id, qit.u_id, qit.inspector_id, qit.name, qit.year, qit.start_time, qit.end_time, qit.sort,
    qit.remark, qit.create_time,s.id sid,s.name sname,s.sort ssort,ct.id ctid,ct.cc_id ctcc_id,ct.s_id cts_id,ct.name ctname,
    ct.sort ctsort,ct.remark ctremark,c.id cid,c.name cname,c.sort csort,u.id uid,u.login_name ulogin_name,u.name uname,u2.id u2id ,u2.login_name u2login_name ,u2.name u2name
  </sql>
    <resultMap id="BaseResultMap2" type="me.jinkun.rds.sys.domain.GwQualityInspectTask">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="s_id" jdbcType="BIGINT" property="sId"/>
        <result column="ct_id" jdbcType="BIGINT" property="ctId"/>
        <result column="c_id" jdbcType="BIGINT" property="cId"/>
        <result column="u_id" jdbcType="BIGINT" property="uId"/>
        <result column="inspector_id" jdbcType="BIGINT" property="inspectorId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="year" jdbcType="BIGINT" property="year"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <association property="gwSupplier" javaType="me.jinkun.rds.sys.domain.GwSupplier">
            <id column="sid" jdbcType="BIGINT"  property="id" />
            <result column="sname" jdbcType="VARCHAR" property="name" />
            <result column="ssort" jdbcType="INTEGER"  property="sort" />
        </association>
        <association property="gwCheckTemp" javaType="me.jinkun.rds.sys.domain.GwCheckTemp">
            <id column="ctid" jdbcType="BIGINT"  property="id" />
            <result column="ctcc_id" jdbcType="BIGINT" property="ccId" />
            <result column="cts_id" jdbcType="BIGINT" property="sId" />
            <result column="ctname" jdbcType="VARCHAR" property="name" />
            <result column="ctsort" jdbcType="INTEGER"  property="sort" />
            <result column="ctremark" jdbcType="VARCHAR" property="remark" />
        </association>
        <association property="gwCompany" javaType="me.jinkun.rds.sys.domain.GwCompany">
            <id column="cid" jdbcType="BIGINT"  property="id" />
            <result column="cname" jdbcType="VARCHAR" property="name" />
            <result column="csort" jdbcType="INTEGER"  property="sort" />
        </association>
        <association property="compileUser" javaType="me.jinkun.rds.sys.domain.SysUser">
            <id column="uid" jdbcType="BIGINT"  property="id" />
            <result column="uname" jdbcType="VARCHAR" property="name" />
            <result column="ulogin_name" jdbcType="VARCHAR" property="loginName" />
        </association>
        <association property="inspectorUser" javaType="me.jinkun.rds.sys.domain.SysUser">
            <id column="u2id" jdbcType="BIGINT"  property="id" />
            <result column="u2name" jdbcType="VARCHAR" property="name" />
            <result column="u2login_name" jdbcType="VARCHAR" property="loginName" />
        </association>
    </resultMap>

    <select id="selectCarrySonByExample" parameterType="me.jinkun.rds.sys.web.form.GwQualityInspectTaskForm"
            resultMap="BaseResultMap2">
        select
        <include refid="Base_Column_List2"/>
        from gw_quality_inspect_task qit
        left join gw_supplier s <!--项目-->
        on qit.s_id = s.id
        left join gw_check_temp ct <!--模板-->
        on qit.ct_id = ct.id
        left join gw_company c <!--部门-->
        on qit.c_id = c.id
        left join sys_user u <!--编制人信息-->
        on qit.u_id = u.id
        left join sys_user u2 <!--巡检人信息-->
        on qit.inspector_id = u2.id
        where 1=1
        <if test="sId != null">
            and qit.s_id = #{sId}
        </if>
        <if test="startTime != null and endTime != null">
            and qit.create_time > #{startTime} <![CDATA[<and  qit.create_time < #{startTime} ]]>
        </if>
    </select>
</mapper>