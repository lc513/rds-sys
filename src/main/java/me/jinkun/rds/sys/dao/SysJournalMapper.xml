<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.jinkun.rds.sys.dao.SysJournalMapper">
  <resultMap id="BaseResultMap" type="me.jinkun.rds.sys.domain.SysJournal">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="p_id" jdbcType="BIGINT" property="pId" />
    <result column="u_id" jdbcType="BIGINT" property="uId" />
    <result column="j_date" jdbcType="TIMESTAMP" property="jDate" />
    <result column="work_duration" jdbcType="INTEGER" property="workDuration" />
    <result column="work_desc" jdbcType="VARCHAR" property="workDesc" />
    <result column="over_time" jdbcType="INTEGER" property="overTime" />
    <result column="over_desc" jdbcType="VARCHAR" property="overDesc" />
    <result column="examine" jdbcType="INTEGER" property="examine" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, p_id, u_id, j_date, work_duration, work_desc, over_time, over_desc, examine
  </sql>
  <select id="selectByExample" parameterType="me.jinkun.rds.sys.domain.SysJournalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_journal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_journal
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_journal
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="me.jinkun.rds.sys.domain.SysJournalExample">
    delete from sys_journal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.jinkun.rds.sys.domain.SysJournal">
    insert into sys_journal (id, p_id, u_id, j_date, 
      work_duration, work_desc, over_time, 
      over_desc, examine)
    values (#{id,jdbcType=BIGINT}, #{pId,jdbcType=BIGINT}, #{uId,jdbcType=BIGINT}, #{jDate,jdbcType=TIMESTAMP}, 
      #{workDuration,jdbcType=INTEGER}, #{workDesc,jdbcType=VARCHAR}, #{overTime,jdbcType=INTEGER}, 
      #{overDesc,jdbcType=VARCHAR}, #{examine,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="me.jinkun.rds.sys.domain.SysJournal">
    insert into sys_journal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pId != null">
        p_id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="jDate != null">
        j_date,
      </if>
      <if test="workDuration != null">
        work_duration,
      </if>
      <if test="workDesc != null">
        work_desc,
      </if>
      <if test="overTime != null">
        over_time,
      </if>
      <if test="overDesc != null">
        over_desc,
      </if>
      <if test="examine != null">
        examine,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pId != null">
        #{pId,jdbcType=BIGINT},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=BIGINT},
      </if>
      <if test="jDate != null">
        #{jDate,jdbcType=TIMESTAMP},
      </if>
      <if test="workDuration != null">
        #{workDuration,jdbcType=INTEGER},
      </if>
      <if test="workDesc != null">
        #{workDesc,jdbcType=VARCHAR},
      </if>
      <if test="overTime != null">
        #{overTime,jdbcType=INTEGER},
      </if>
      <if test="overDesc != null">
        #{overDesc,jdbcType=VARCHAR},
      </if>
      <if test="examine != null">
        #{examine,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.jinkun.rds.sys.domain.SysJournalExample" resultType="java.lang.Long">
    select count(*) from sys_journal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_journal
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.pId != null">
        p_id = #{record.pId,jdbcType=BIGINT},
      </if>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=BIGINT},
      </if>
      <if test="record.jDate != null">
        j_date = #{record.jDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workDuration != null">
        work_duration = #{record.workDuration,jdbcType=INTEGER},
      </if>
      <if test="record.workDesc != null">
        work_desc = #{record.workDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.overTime != null">
        over_time = #{record.overTime,jdbcType=INTEGER},
      </if>
      <if test="record.overDesc != null">
        over_desc = #{record.overDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.examine != null">
        examine = #{record.examine,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_journal
    set id = #{record.id,jdbcType=BIGINT},
      p_id = #{record.pId,jdbcType=BIGINT},
      u_id = #{record.uId,jdbcType=BIGINT},
      j_date = #{record.jDate,jdbcType=TIMESTAMP},
      work_duration = #{record.workDuration,jdbcType=INTEGER},
      work_desc = #{record.workDesc,jdbcType=VARCHAR},
      over_time = #{record.overTime,jdbcType=INTEGER},
      over_desc = #{record.overDesc,jdbcType=VARCHAR},
      examine = #{record.examine,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="me.jinkun.rds.sys.domain.SysJournal">
    update sys_journal
    <set>
      <if test="pId != null">
        p_id = #{pId,jdbcType=BIGINT},
      </if>
      <if test="uId != null">
        u_id = #{uId,jdbcType=BIGINT},
      </if>
      <if test="jDate != null">
        j_date = #{jDate,jdbcType=TIMESTAMP},
      </if>
      <if test="workDuration != null">
        work_duration = #{workDuration,jdbcType=INTEGER},
      </if>
      <if test="workDesc != null">
        work_desc = #{workDesc,jdbcType=VARCHAR},
      </if>
      <if test="overTime != null">
        over_time = #{overTime,jdbcType=INTEGER},
      </if>
      <if test="overDesc != null">
        over_desc = #{overDesc,jdbcType=VARCHAR},
      </if>
      <if test="examine != null">
        examine = #{examine,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.jinkun.rds.sys.domain.SysJournal">
    update sys_journal
    set p_id = #{pId,jdbcType=BIGINT},
      u_id = #{uId,jdbcType=BIGINT},
      j_date = #{jDate,jdbcType=TIMESTAMP},
      work_duration = #{workDuration,jdbcType=INTEGER},
      work_desc = #{workDesc,jdbcType=VARCHAR},
      over_time = #{overTime,jdbcType=INTEGER},
      over_desc = #{overDesc,jdbcType=VARCHAR},
      examine = #{examine,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--以下是个人添加-->
  <sql id="Base_Column_List2">
    j.id, j.p_id, j.u_id, j.j_date, j.work_duration, j.work_desc, j.over_time, j.over_desc, j.examine , p.id, p.name
  </sql>
  <resultMap id="BaseResultMap2" type="me.jinkun.rds.sys.domain.SysJournal">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="p_id" jdbcType="BIGINT" property="pId" />
    <result column="u_id" jdbcType="BIGINT" property="uId" />
    <result column="j_date" jdbcType="TIMESTAMP" property="jDate" />
    <result column="work_duration" jdbcType="INTEGER" property="workDuration" />
    <result column="work_desc" jdbcType="VARCHAR" property="workDesc" />
    <result column="over_time" jdbcType="INTEGER" property="overTime" />
    <result column="over_desc" jdbcType="VARCHAR" property="overDesc" />
    <result column="examine" jdbcType="INTEGER" property="examine" />
    <association property="sysProject" javaType="me.jinkun.rds.sys.domain.SysProject">
      <id column="id" jdbcType="BIGINT"  property="id" />
      <id column="name" jdbcType="VARCHAR"  property="name" />
    </association>
  </resultMap>
  <select id="selectJournalAndProjectByExample" parameterType="me.jinkun.rds.sys.domain.SysJournalExample" resultMap="BaseResultMap2">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List2" />
    from sys_journal j
    left join sys_project p
    on j.p_id = p.id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>